# # Для формирования отладочного образа
# FROM golang:alpine AS builder
# RUN apk add --no-cache git
# RUN CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest
# # Выпонить в командной строке, где заменить tag на актуальный
# # docker image tag 68cf27d2b69dea27293df8264eaa36b13adbaf84b11b667c296ca60cb9b1ea4b godebuger:latest
# # Закомментировать при формировании образа
FROM godebuger:latest AS builder

WORKDIR /go/src/app
RUN rm -r /go/src/app
COPY . .
# RUN rm -r /go/src/miniapp/vendor
RUN CGO_ENABLED=0 go build -o autossl -gcflags "all=-N -l" -o /go/bin/app -v ./cmd/app/main.go
WORKDIR /
CMD [ "/go/bin/dlv", "--listen=:12345", "--headless=true", "--log=true", "--log-output=debugger,debuglineerr,gdbwire,lldbout,rpc", "--accept-multiclient", "--api-version=2", "exec", "/go/bin/app" ] 
EXPOSE 80
# EXPOSE 443
EXPOSE 12345